package components

type TopVTuber struct{
  Name         string
  OriginalName string
  AvatarURL    string
}

type IndexPageModel struct{
  Videos                []WatchedVideo
  ContinuationURL       string
  TopVTubersAllTime     []TopVTuber
  TopVTubersWeekly      []TopVTuber
  UserProfilePictureURL string
}

templ topVTubersList(vtubers []TopVTuber) {
  <div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-6 gap-4 px-2">
    for _, vtuber := range vtubers {
      <div class="bg-white/10 border border-white/20 shadow-lg rounded-xl overflow-hidden p-4 flex flex-col items-center transition-transform hover:scale-105">
        <div class="w-24 h-24 rounded-full overflow-hidden border border-white/30 mb-3 bg-neutral-600 animate-pulse relative">
          <img src={vtuber.AvatarURL} alt=""
            class="object-cover w-full h-full"
            onload="this.parentElement.classList.remove('animate-pulse')"
          />
        </div>
        <p class="text-white text-center font-semibold text-sm">{vtuber.Name}</p>
        if vtuber.OriginalName != "" {
          <p class="text-neutral-300 text-center text-sm">{vtuber.OriginalName}</p>
        }
      </div>
    }
  </div>
}

templ IndexPage(model IndexPageModel) {
  <!DOCTYPE html>
  <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>OshiStats</title>
      <link rel="icon" type="image/png" href="/static/icon-64.png">
      <link rel="stylesheet" href="/static/tailwind.css">
      <script src="/static/htmx.min.js"></script>
      <script src="/static/color-thief.min.js"></script>
    </head>
    <body class="min-h-screen bg-gradient-to-r from-neutral-800 via-neutral-900 to-neutral-800">
      <header class="bg-neutral-900 border-b border-neutral-700">
        <div class="container mx-auto flex items-center justify-between px-6 py-4">
          <div class="flex items-center gap-4">
            <img src="/static/icon-240.png" alt="OshiStats Icon" class="w-10 h-10 rounded">
            <div class="gap-0 select-none">
              <h2 class="text-neutral-200 mb-0 text-sm font-semibold">Botsu</h2>
              <h1 class="text-white text-2xl font-semibold">OshiStats</h1>
            </div>
          </div>
          if model.UserProfilePictureURL != "" {
            <img src={model.UserProfilePictureURL} alt="Profile" class="w-10 h-10 rounded-full border border-neutral-600 shadow-sm">
          }
        </div>
      </header>
      <main class="container mx-auto p-6">
        if len(model.TopVTubersAllTime) > 0 {
          <section class="my-8">
            <div class="flex items-center gap-5 px-2 mb-4">
              <h2 class="text-2xl font-bold text-white">Top Of All Time</h2>
              <a href="/timeline?type=all" class="text-sm text-blue-400 hover:underline flex items-center">
                Overview <span class="ml-1">→</span>
              </a>
            </div>
            @topVTubersList( model.TopVTubersAllTime)
          </section>
        }
        if len(model.TopVTubersWeekly) > 0 {
          <section class="my-8">
            <div class="flex items-center gap-5 px-2 mb-4">
              <h2 class="text-2xl font-bold text-white">Top Of Last 7 Days</h2>
              <a href="/timeline?type=week" class="text-sm text-blue-400 hover:underline flex items-center">
                Overview <span class="ml-1">→</span>
              </a>
            </div>
            @topVTubersList(model.TopVTubersWeekly)
          </section>
        }
        <section class="px-2">
          <h2 class="text-2xl font-bold text-white mb-4">Watch History</h2>
          @watchedVideoGrid(model.Videos, model.ContinuationURL)
        </section>
      </main>
    </body>
  </html>
}
